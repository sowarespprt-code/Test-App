{
  "version": 3,
  "sources": ["../../../../../apps/test_app/test_app/public/js/helpdesk.bundle.js"],
  "sourcesContent": ["// This will override helpdesk's customer modal\nfrappe.provide('helpdesk.customer');\n\nhelpdesk.customer.show_customer_modal = function(customer_name) {\n    frappe.call({\n        method: 'test_app.api.helpdesk_customer.get_customer_details',\n        args: { customer: customer_name },\n        callback: function(r) {\n            if (r.message) {\n                let customer = r.message;\n                let dialog_fields = [{\n                    fieldtype: 'HTML',\n                    options: `<div class=\"text-center p-4\">\n                        <div style=\"width: 70px; height: 70px; margin: 0 auto 10px; \n                             border-radius: 50%; background: #5e64ff; color: white; \n                             display: flex; align-items: center; justify-content: center; \n                             font-size: 28px;\">\n                            ${customer.name[0].toUpperCase()}\n                        </div>\n                        <h4>${customer.name}</h4>\n                    </div>`\n                }];\n                \n                customer.fields.forEach(f => {\n                    dialog_fields.push({\n                        fieldname: f.fieldname,\n                        label: f.label,\n                        fieldtype: f.fieldtype,\n                        default: f.value,\n                        options: f.options\n                    });\n                });\n                \n                new frappe.ui.Dialog({\n                    title: 'Customer Details',\n                    fields: dialog_fields,\n                    size: 'large',\n                    primary_action_label: 'Save',\n                    primary_action: function(values) {\n                        frappe.call({\n                            method: 'frappe.client.set_value',\n                            args: {\n                                doctype: 'HD Customer',\n                                name: customer_name,\n                                fieldname: values\n                            },\n                            callback: () => {\n                                frappe.show_alert('Customer updated');\n                                this.hide();\n                            }\n                        });\n                    }\n                }).show();\n            }\n        }\n    });\n};"],
  "mappings": ";;AACA,SAAO,QAAQ,mBAAmB;AAElC,WAAS,SAAS,sBAAsB,SAAS,eAAe;AAC5D,WAAO,KAAK;AAAA,MACR,QAAQ;AAAA,MACR,MAAM,EAAE,UAAU,cAAc;AAAA,MAChC,UAAU,SAAS,GAAG;AAClB,YAAI,EAAE,SAAS;AACX,cAAI,WAAW,EAAE;AACjB,cAAI,gBAAgB,CAAC;AAAA,YACjB,WAAW;AAAA,YACX,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,8BAKC,SAAS,KAAK,GAAG,YAAY;AAAA;AAAA,8BAE7B,SAAS;AAAA;AAAA,UAEvB,CAAC;AAED,mBAAS,OAAO,QAAQ,OAAK;AACzB,0BAAc,KAAK;AAAA,cACf,WAAW,EAAE;AAAA,cACb,OAAO,EAAE;AAAA,cACT,WAAW,EAAE;AAAA,cACb,SAAS,EAAE;AAAA,cACX,SAAS,EAAE;AAAA,YACf,CAAC;AAAA,UACL,CAAC;AAED,cAAI,OAAO,GAAG,OAAO;AAAA,YACjB,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,MAAM;AAAA,YACN,sBAAsB;AAAA,YACtB,gBAAgB,SAAS,QAAQ;AAC7B,qBAAO,KAAK;AAAA,gBACR,QAAQ;AAAA,gBACR,MAAM;AAAA,kBACF,SAAS;AAAA,kBACT,MAAM;AAAA,kBACN,WAAW;AAAA,gBACf;AAAA,gBACA,UAAU,MAAM;AACZ,yBAAO,WAAW,kBAAkB;AACpC,uBAAK,KAAK;AAAA,gBACd;AAAA,cACJ,CAAC;AAAA,YACL;AAAA,UACJ,CAAC,EAAE,KAAK;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;",
  "names": []
}
